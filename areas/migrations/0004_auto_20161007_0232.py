# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-10-07 02:32
from __future__ import unicode_literals
from django.db import migrations, models
from localflavor.us.forms import USPhoneNumberField
from django.forms import ValidationError


def merge_coordinators(apps, schema_editor):
    PrecinctCoordinator = apps.get_model('areas', 'PrecinctCoordinator')

    phone_number_field = USPhoneNumberField()

    all_coordinators = PrecinctCoordinator.objects.all()

    # normalize phone numbers
    for coordinator in all_coordinators:
        try:
            coordinator.phone_number = phone_number_field.clean(coordinator.phone_number)
            coordinator.save()
        except ValidationError:
            pass


    distinct_coordinators = PrecinctCoordinator.objects.distinct('email').order_by('email')


    for c in distinct_coordinators:

        possible_dupes = PrecinctCoordinator.objects.filter(email__iexact=c.email).exclude(id=c.id)

        if not possible_dupes.exists():
            continue

        for dupe in possible_dupes:

            # assumes only a single affiliation
            c.affiliations.add(dupe.affiliations.first())

            if dupe.email.lower() not in c.email.lower().split('\n'):
                c.email += '\n' + dupe.email

            if dupe.phone_number not in c.phone_number.split('\n'):
                c.phone_number += "\n" + dupe.phone_number

            c.save()
            dupe.delete()



class Migration(migrations.Migration):

    dependencies = [
        ('areas', '0003_auto_20161007_0219'),
    ]

    operations = [
        migrations.AlterField(
            model_name='precinctcoordinator',
            name='email',
            field=models.EmailField(blank=True, max_length=1024, null=True),
        ),
        migrations.AlterField(
            model_name='precinctcoordinator',
            name='phone_number',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.RunPython(merge_coordinators, reverse_code=migrations.RunPython.noop)
    ]
